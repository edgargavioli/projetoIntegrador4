version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    ulimits:
      nofile: # Fix memory leak issue on some systems when LimitCORE=infinity (containerd)
        soft: 1048576
        hard: 1048576
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"

  jaeger-api:
    image: jaegertracing/opentelemetry-all-in-one
    container_name: jaeger-api
    ports:
      - "16686:16686"
    depends_on:
      - collector-api

  collector-api:
    # image: otel/opentelemetry-collector:latest
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: collector-api
    volumes:
      - ./collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - 4317:4317
      - 4318:4318
      - 8889:8889

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - collector-api

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/postgres
      - SONAR_JDBC_USERNAME=postgres
      - SONAR_JDBC_PASSWORD=postgres
    depends_on:
      - db

volumes:
  mysql_data:
